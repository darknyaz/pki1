# Simple Root CA config
#
# Простой пример конфигурации корневого центра сертификации
# (удостоверяющего центра, УЦ, CA - certificate authority)



# The [default] section contains global constants that can be referred to from
# the entire configuration file. It may also hold settings pertaining to more
# than one openssl command.
#
# Секция по умолчанию (default). Строка [default] может быть опущена.
# Здесь содержатся константы для всех секций конфигурационного файла
# (глобальные). Здесь также могут быть настройки, относящиеся к
# нескольким командам openssl.

[ default ]
ca                      = root-ca               # CA name / Имя УЦ
dir                     = .                     # Top dir / Корневой каталог УЦ

# The next part of the configuration file is used by the openssl req command.
# It defines the CA's key pair, its DN, and the desired extensions for the CA
# certificate.
#
# Секция, используемая командой openssl req - команда для работы с запросами
# на сертификат (CSR - certificate signing request). Здесь определены параметры
# ключей RSA, уникальное имя (DN - distinguished name) и расширения.

[ req ]
default_bits            = 2048                  # RSA key size / Размер модуля RSA в битах
encrypt_key             = no                    # Don't protect private key / Не шифровать закрытый ключ
default_md              = sha1                  # MD to use / Хэш, используемый при подписывании CSR
utf8                    = yes                   # Input is UTF-8 / Уникальное имя в UTF-8
string_mask             = utf8only              # Emit UTF-8 strings / Строковые поля только в UTF-8
prompt                  = no                    # Don't prompt for DN / Не запрашивать ввод DN
distinguished_name      = ca_dn                 # DN section / Секция DN
req_extensions          = ca_req_ext            # Desired extensions / Расширения

# Секция уникального имени. Сертификаты, выдаваемые УЦ одному клиенту, должны иметь уникальное имя,
# т. е. поле Subject должно быть разным у каждого клиента УЦ.

[ ca_dn ]
organizationName        = "YSU"	  	        # Название организации
organizationalUnitName  = "YSU CA"		# Название отдела организации
commonName              = "YSU CA"		# Общее имя

[ ca_req_ext ]
keyUsage                = critical,keyCertSign,cRLSign # Допустимое использование ключа
basicConstraints        = critical,CA:true	# Сертификат УЦ
subjectKeyIdentifier    = hash			# Хэш, чтобы различать сертификаты,
						# выданные одному клиенту

# The remainder of the configuration file is used by the openssl ca command.
# The CA section defines the locations of CA assets, as well as the policies
# applying to the CA.
#
# Оставшаяся часть конфигурационного файла используется командой openssl ca.
# Секции определяют местоположение файлов УЦ, настройки и политики.

[ ca ]
default_ca              = root_ca               # The default CA section / Секция УЦ по умолчанию

[ root_ca ]
certificate             = $dir/ca/$ca.crt       # The CA cert
						# Путь до сертификата УЦ
private_key             = $dir/ca/$ca/private/$ca.key # CA private key
						      #Путь до закрытого ключа УЦ
new_certs_dir           = $dir/ca/$ca           # Certificate archive
						# Директория для выданных сертификатов
serial                  = $dir/ca/$ca/db/$ca.crt.srl # Serial number file
						     # Путь до файла с номером следующего сертификата
crlnumber               = $dir/ca/$ca/db/$ca.crl.srl # CRL number file
						     # Путь до файла с номером следующего списка отзыва
database                = $dir/ca/$ca/db/$ca.db # Index file
						# База выданных сертификатов
unique_subject          = no                    # Require unique subject
						# Можно выдать больше одного сертификата клиенту
default_days            = 3652                  # How long to certify for
						# Срок действия сертификата
default_md              = sha256                # MD to use
						# Хэш, используемый для подписи сертификата
policy                  = ca_pol	        # Default naming policy
						# Политика по умолчанию
name_opt		= ca_default		# Удобный для чтения вывод при выпуске сертификата
cert_opt		= ca_default		# Удобный для чтения вывод при выпуске сертификата
x509_extensions         = signing_ca_ext        # Default cert extensions
						# Расширения по умолчанию
default_crl_days        = 365                   # How long before next CRL
						# Срок действия списка отзыва
crl_extensions          = crl_ext               # CRL extensions
						# Расширения списков отзыва

# Naming policies control which parts of a DN end up in the certificate and
# under what circumstances certification should be denied.
#
# Политики определяют какие части уникального имени должны присутствовать
# в сертификате и какие должны быть запрещены.

[ ca_pol ]
organizationName        = match                 # Must match 'YSU'
						# Должно соответствовать "YSU"
organizationalUnitName  = supplied              # Included if present
						# Включается, если присутствует
commonName              = supplied              # Must be present
						# Должно присутствовать

# Certificate extensions define what types of certificates the CA is able to
# create.
#
# Расширения определяют для каких целей УЦ может выдавать сертификаты.

[ root_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign # С помощью этого ключа можно выпускать
						       # сертификаты и списки отзыва
basicConstraints        = critical,CA:true	# Сертификат является сертификатом УЦ
subjectKeyIdentifier    = hash			# Идентификатор клиента
authorityKeyIdentifier  = keyid:always		# Идентификатор выпускающего УЦ

[ signing_ca_ext ]
keyUsage                = critical,keyCertSign,cRLSign
basicConstraints        = critical,CA:true,pathlen:0 # pathlen:0 указывает на то, что следующий сертификат
				 		     # в цепочке доверия - сертификат корневого УЦ
subjectKeyIdentifier    = hash
authorityKeyIdentifier  = keyid:always

# CRL extensions exist solely to point to the CA certificate that has issued
# the CRL.
#
# Это расширение добавляет в список отзыва идентификатор выпустившего УЦ.

[ crl_ext ]
authorityKeyIdentifier  = keyid:always
